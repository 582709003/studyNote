1、在application.properties文件里配置日志的配置文件的路径 例如：logging.config=classpath:log4j2-spring.xml
2、spring boot引入的依赖很多都自动引入的logback日志框架，所以需要将所有的logback都去除，可以使用以下方法：
     1：统一排除
       <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

     2:<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

       很多包都默认使用的logback,你单独排除了web包是不是还会出现这个问题，
答 ： 是的会出现，这里就需要知道pom文件的加载顺序了，pom文件的加载顺序也是从上至下执行，那么我们就需要把web包放到pom文件中的第一位，在向下执行的时候也会排除所有的默认logger了。


   3：//这段代码相当于@Slf4j注解，使用log4j或者logback或者log4j2 都可以使用以下代码，或者注解
    private Logger log = LoggerFactory.getLogger(this.getClass());